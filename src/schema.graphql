# import Pick, User from "./generated/schema.graphql"

type Query {
  fixtures(
    competitionId: ID!
    timeFrameStart: String
    timeFrameEnd: String
    matchday: Int
  ): [Fixture]!
  fixture(id: ID!): Fixture
  users(
    where: UserWhereInput
    orderBy: UserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [User]!
  user(where: PickWhereUniqueInput!): User!
  pick(where: UserWhereUniqueInput!): Pick!
  picks(
    where: PickWhereInput
    orderBy: PickOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Pick]!
}

#type Mutation {
#  createDraft(title: String!, content: String): Post
#  deletePost(id: ID!): Post
#  publish(id: ID!): Post
#}

# type Pick {
#   id: ID!
#   fixtureId: Int!
#   choice: String
#   gameday: Int!
#   matchday: Int!
#   points: Int
#   resolved: Boolean
#   user: User!
#   fixture: Fixture!
# }

type Fixture {
  id: ID!
  homeTeamName: String!
  awayTeamName: String!
  status: String!
  date: String!
  matchday: Int!
  result: Result
  picks: [Pick]!
}

type Result {
  goalsHomeTeam: Int
  goalsAwayTeam: Int
}

# type User {
#   id: ID!
#   name: String!
#   picks: [Pick]!
# }
